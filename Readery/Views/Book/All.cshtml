@model PaginationBookViewModel

@{
    ViewData["Title"] = "Books";
}

<h2 class="text-center text-break">@ViewData["PageTitle"]</h2>

<hr />

<div class="row mx-auto w-res mt-5" style="width: 85%">
	@foreach(var book in Model.Books)
	{
        <div class="col-lg-3 col-sm-6 d-flex justify-content-center mb-5">
            <div class="card base-border shadow card-hover" style="max-width: 200px">
                <a asp-area="" asp-controller="Book" asp-action="Details" asp-route-id="@book.Id" style="text-decoration: none; color: inherit">
                    <img src="~/@book.ImagePath" class="card-img-top" alt="Image">
                    <div class="card-body">
                        <h6 class="card-title fw-bold" >@book.Title</h6>
                        <p class="card-text">Language: @book.Language</p>
                        <p class="card-text">Price: €@book.Price</p>
                        <p class="card-text">
                            <small class="text-body-secondary">Author: @book.AuthorName</small>
                        </p>
                    </div>
                </a>
            </div>
        </div>
	}
</div>

@if(Model.TotalPages > 1)
{
    @await Component.InvokeAsync("Pagination", new{ currentPage = Model.CurrentPage, totalPages = Model.TotalPages });
}
